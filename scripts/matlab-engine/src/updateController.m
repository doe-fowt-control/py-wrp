function [mv, u_EKF, onlineData, xk, md_prediction] = ...
    updateController(EKF, y, u_EKF, parameters_cell_array, ...
    float_excitation_data, prediction_horizon_times, ...
    predicted_amplitude, predicted_ang_freq, predicted_phase, ...
    predicted_preview_wave_elevation, mv, onlineData)
% Call this function in the control loop after you have called
% initialize_controller() once. There are 12 inputs:
%   EKF is the extended Kalman filter object that was initialized in
% initialize_controller(). You don't need to modify this object, as the
% pointer to this object is passed to this function to automattically
% modify this object.
%   y is the current measured outputs; it is a 2 x 1 array in the format
% [heave in m; roll angle in rad]. This will be the realtime stringpot
% measurements. Convert the roll stringpot measurement to angles (radians).
%   u_EKF is the float moodel input array that the extended Kalman filter
% object uses. u_EKF is a 1 x 4 row vector that is updated in this function
% automatically and passed out an as output for the next iteration. 
% Initialize with u_EKF = [mv0, 0, 0, 0], where mv0 is the starting 
% position of the controller rack. The controller and model is currently
% calibrated to be 0 when the controller rack is positioned all the way to
% the left when looking at the bow (rightmost end of the rack positioned
% right above the central pinion).
%   parameters_cell_array is the cell array of float model parameters that
% was initialized in initialize_controller. parameters_cell_array should be
% passed to this function without modification.
%   float_excitation_data is the structure containing the scaled and
% interpolated AQWA excitation force response per unit amplitude data 
% used to calculate the total excitation force on the float or simulated
% float. float_excitation_data is generated by initialize_controller() and
% should be passed directly to this function without modification. 
%   prediction_horizon_times is the hp x 1 array of times corresponding to 
% the wave reconstruction algorithm predictions for the entire prediction 
% horizon, where hp is the prediction horizon. If each new prediction 
% corresponds to t=0 at the start of each new prediction set, 
% prediction_horizon_times should be taken from t=0 and is distinct 
% from the time since the start of the experimental/simulated run 
% (see main.m lines 201 - 206).
%   predicted_amplitude, predicted_ang_freq, and predicted_phase are the 
% predicted spectral decompositions of the future incoming waves, as
% predicted by the wave reconstronstruction algorithm code. The spectral
% decompositions are 1 x n vectors, where n is the number of angular
% frequencies in the spectral decomposition, of the spectral amplitude, 
% angular frequency, and phase content, respectively, of the predicted
% incoming wave elevation. 
%   predicted_preview_wave_elevation is the hp x 1 column vector of the
% predicted future incoming wave elevation for the entire prediction 
% horizon, as predicted by the wave reconstruction algorithm, where hp is
% the prediction horizon.
%   mv is the most current optimal manipulated variable or optimal 
% controller rack position as calculated by the nonlinear model predictive 
% controller. When used as an input to this function, mv is the optimal
% controller rack position from the previous timestep and is used as a
% starting point for the controller to optimize from for the current
% timestep iteration. It is a scalar value between 0 and the length of the
% controller rack. 
%   onlineData is the optimized data structure from initialize_controller()
% that the MEX (compiled) function expects as one of its inputs. onlineData
% is modified each timestep iteration with the measured disturbances of
% predicted total heave excitation force, predicted total roll excitation
% force, and predicted wave elevation for the entire prediction horizon. 
% 
%   Outputs:
%   mv, u_EKF, and onlineData are all modified in this function and are
% passed back out as outputs to be passed back in as inputs to the next 
% update_controller() timestep iteration.
%   xk (20 x 1 array of the current estimated states) and md_prediction 
% (hp x 3 array of measured disturbances for the entire prediction horizon 
% hp, with measured disturbances in columns 1 - 3 respectively of predicted 
% total heave excitation force, predicted total roll excitation force, and 
% predicted wave elevation) are optional outputs used in main.m for 
% plotting purposes. Useful if you want to print out or visualize what's 
% going on with the controller in the user interface or for debugging.

% Correct previous prediction
% https://www.mathworks.com/help/control/ref/correct.html
xk = correct(EKF, y, u_EKF, parameters_cell_array{:});

% Calculate excitation forces
[predicted_preview_excitation_heave, predicted_preview_excitation_roll] ...
    = excitationForceCalculator(float_excitation_data, ...
    prediction_horizon_times, predicted_amplitude, predicted_ang_freq, ...
    predicted_phase);

% Update measured disturbance preview across controller
% prediction horizon to onlineData data structure
md_prediction = [predicted_preview_excitation_heave, ...
    predicted_preview_excitation_roll, predicted_preview_wave_elevation];
onlineData.md = md_prediction;

% Compute optimal control move with optimal data structures
[mv, onlineData] = mexController(xk, mv, onlineData);

% Predict prediction model states for the next iteration
% https://www.mathworks.com/help/control/ref/...
% predict_method_state_estimation.html#bvef5vg-Us1Usn
u_EKF = [mv, md_prediction(1, :)];
predict(EKF, u_EKF, parameters_cell_array{:});
