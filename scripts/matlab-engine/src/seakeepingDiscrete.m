function x_next_time_step = seakeepingDiscrete(x_current_time_step, u, ...
    gravity, density_water, total_mass_heave, total_inertia_roll, ...
    beam_model, operating_draft, equivalent_box_length, C_44, C_34, ...
    viscous_drag_factor_heave, viscous_drag_factor_roll, ...
    number_prony_heave, beta_heave_real, s_heave_real, beta_heave_imag, ...
    s_heave_imag, number_prony_roll, beta_roll_real, s_roll_real, ...
    beta_roll_imag, s_roll_imag, I_real_heave_start, I_real_heave_end, ...
    I_imag_heave_start, I_imag_heave_end, I_real_roll_start, ...
    I_real_roll_end, I_imag_roll_start, I_imag_roll_end, ...
    control_on_flag, scale, scaled_displacement, control_rack_length, ...
    control_mass, sampling_time)

% Repeat application of Euler method sampled at sampling_time / M, based on
% closed control loop example pendulumDT0.m,
% https://www.mathworks.com/help/mpc/ref/nlmpc.nlmpcmove.html

M = 10;
delta_time = sampling_time / M;
x_next_time_step = x_current_time_step;

for integration_iteration = 1 : M
    
    dxdt = seakeepingContinuous(x_next_time_step, u, gravity, ...
        density_water, total_mass_heave, total_inertia_roll, ...
        beam_model, operating_draft, equivalent_box_length, C_44, C_34, ...
        viscous_drag_factor_heave, viscous_drag_factor_roll, ...
        number_prony_heave, beta_heave_real, s_heave_real, ...
        beta_heave_imag, s_heave_imag, number_prony_roll, ...
        beta_roll_real, s_roll_real, beta_roll_imag, s_roll_imag, ...
        I_real_heave_start, I_real_heave_end, I_imag_heave_start, ...
        I_imag_heave_end, I_real_roll_start, I_real_roll_end, ...
        I_imag_roll_start, I_imag_roll_end, control_on_flag, scale, ...
        scaled_displacement, control_rack_length, control_mass, ...
        sampling_time);

    x_next_time_step = x_next_time_step + delta_time * dxdt;
end

